version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ub-app
    volumes:
      - .:/app
    command: python main.py
    depends_on:
      - redis
      - postgres
    environment:
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
      - DB_URL=${DB_URL}

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ub-celery
    volumes:
      - .:/app
    command: celery -A app.tasks.celery_app worker --loglevel=info
    depends_on:
      - redis
      - postgres
    environment:
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
      - DB_URL=${DB_URL}

  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ub-celery-beat
    volumes:
      - .:/app
    command: celery -A app.tasks.celery_app beat --loglevel=info
    depends_on:
      - redis
      - postgres
    environment:
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
      - DB_URL=${DB_URL}

  redis:
    image: redis:6.2
    container_name: ub-redis
    ports:
      - "6379:6379"
    volumes:
      - ub-redis:/data
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]

  postgres:
    image: postgres:12
    container_name: ub-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - ub-postgres:/var/lib/postgresql/data

volumes:
  ub-redis:
  ub-postgres:
